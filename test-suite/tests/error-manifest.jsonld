{
  "@context": "http://json-ld.org/test-suite/context.jsonld",
  "@id": "",
  "@type": "mf:Manifest",
  "description": "JSON-LD to Expansion tests use object compare",
  "name": "Error handling",
  "baseIri": "http://json-ld.org/test-suite/tests/",
  "sequence": [
    {
      "@id": "#t0001",
      "@type": [ "jld:NegativeEvaluationTest", "jld:FlattenTest" ],
      "name": "Keywords cannot be aliased to other keywords",
      "purpose": "Verifies that an exception is raised on expansion when processing an invalid context aliasing a keyword to another keyword",
      "input": "error-0001-in.jsonld",
      "expect": "keyword redefinition"
    }, {
      "@id": "#t0002",
      "@type": [ "jld:NegativeEvaluationTest", "jld:FlattenTest" ],
      "name": "A context may not include itself recursively (direct)",
      "purpose": "Verifies that an exception is raised on expansion when processing a context referencing itself",
      "input": "error-0002-in.jsonld",
      "expect": "recursive context inclusion"
    }, {
      "@id": "#t0003",
      "@type": [ "jld:NegativeEvaluationTest", "jld:FlattenTest" ],
      "name": "A context may not include itself recursively (indirect)",
      "purpose": "Verifies that an exception is raised on expansion when processing a context referencing itself indirectly",
      "input": "error-0003-in.jsonld",
      "expect": "recursive context inclusion"
    }, {
      "@id": "#t0004",
      "@type": [ "jld:NegativeEvaluationTest", "jld:FlattenTest" ],
      "name": "Error dereferencing a remote context",
      "purpose": "Verifies that an exception is raised on expansion when a context dereference results in an error",
      "input": "error-0004-in.jsonld",
      "expect": "loading remote context failed"
    }, {
      "@id": "#t0005",
      "@type": [ "jld:NegativeEvaluationTest", "jld:FlattenTest" ],
      "name": "Invalid remote context",
      "purpose": "Verifies that an exception is raised on expansion when a remote context is not an object containing @context",
      "input": "error-0005-in.jsonld",
      "expect": "invalid remote context"
    }, {
      "@id": "#t0006",
      "@type": [ "jld:NegativeEvaluationTest", "jld:FlattenTest" ],
      "name": "Invalid local context",
      "purpose": "Verifies that an exception is raised on expansion when a context is not a string or object",
      "input": "error-0006-in.jsonld",
      "expect": "invalid local context"
    }, {
      "@id": "#t0007",
      "@type": [ "jld:NegativeEvaluationTest", "jld:FlattenTest" ],
      "name": "Invalid base IRI",
      "purpose": "Verifies that an exception is raised on expansion when a context contains an invalid @base",
      "input": "error-0007-in.jsonld",
      "expect": "invalid base IRI"
    }, {
      "@id": "#t0008",
      "@type": [ "jld:NegativeEvaluationTest", "jld:FlattenTest" ],
      "name": "Invalid vocab mapping",
      "purpose": "Verifies that an exception is raised on expansion when a context contains an invalid @vocab mapping",
      "input": "error-0008-in.jsonld",
      "expect": "invalid vocab mapping"
    }, {
      "@id": "#t0009",
      "@type": [ "jld:NegativeEvaluationTest", "jld:FlattenTest" ],
      "name": "Invalid default language",
      "purpose": "Verifies that an exception is raised on expansion when a context contains an invalid @language",
      "input": "error-0009-in.jsonld",
      "expect": "invalid default language"
    }, {
      "@id": "#t0010",
      "@type": [ "jld:NegativeEvaluationTest", "jld:FlattenTest" ],
      "name": "Cyclic IRI mapping",
      "purpose": "Verifies that an exception is raised on expansion when a cyclic IRI mapping is found",
      "input": "error-0010-in.jsonld",
      "expect": "cyclic IRI mapping"
    }, {
      "@id": "#t0011",
      "@type": [ "jld:NegativeEvaluationTest", "jld:FlattenTest" ],
      "name": "Invalid term definition",
      "purpose": "Verifies that an exception is raised on expansion when a invalid term definition is found",
      "input": "error-0011-in.jsonld",
      "expect": "invalid term definition"
    }, {
      "@id": "#t0012",
      "@type": [ "jld:NegativeEvaluationTest", "jld:FlattenTest" ],
      "name": "Invalid type mapping (not a string)",
      "purpose": "Verifies that an exception is raised on expansion when a invalid type mapping is found",
      "input": "error-0012-in.jsonld",
      "expect": "invalid type mapping"
    }, {
      "@id": "#t0013",
      "@type": [ "jld:NegativeEvaluationTest", "jld:FlattenTest" ],
      "name": "Invalid type mapping (not absolute IRI)",
      "purpose": "Verifies that an exception is raised on expansion when a invalid type mapping is found",
      "input": "error-0013-in.jsonld",
      "expect": "invalid type mapping"
    }, {
      "@id": "#t0014",
      "@type": [ "jld:NegativeEvaluationTest", "jld:FlattenTest" ],
      "name": "Invalid reverse property (contains @id)",
      "purpose": "Verifies that an exception is raised on expansion when a invalid reverse property is found",
      "input": "error-0014-in.jsonld",
      "expect": "invalid reverse property"
    }, {
      "@id": "#t0015",
      "@type": [ "jld:NegativeEvaluationTest", "jld:FlattenTest" ],
      "name": "Invalid IRI mapping (@reverse not a string)",
      "purpose": "Verifies that an exception is raised on expansion when a invalid IRI mapping is found",
      "input": "error-0015-in.jsonld",
      "expect": "invalid IRI mapping"
    }, {
      "@id": "#t0016",
      "@type": [ "jld:NegativeEvaluationTest", "jld:FlattenTest" ],
      "name": "Invalid IRI mapping (not an absolute IRI)",
      "purpose": "Verifies that an exception is raised on expansion when a invalid IRI mapping is found",
      "input": "error-0016-in.jsonld",
      "expect": "invalid IRI mapping"
    }, {
      "@id": "#t0017",
      "@type": [ "jld:NegativeEvaluationTest", "jld:FlattenTest" ],
      "name": "Invalid reverse property (invalid @container)",
      "purpose": "Verifies that an exception is raised on expansion when a invalid reverse property is found",
      "input": "error-0017-in.jsonld",
      "expect": "invalid reverse property"
    }, {
      "@id": "#t0018",
      "@type": [ "jld:NegativeEvaluationTest", "jld:FlattenTest" ],
      "name": "Invalid IRI mapping (@id not a string)",
      "purpose": "Verifies that an exception is raised on expansion when a invalid IRI mapping is found",
      "input": "error-0018-in.jsonld",
      "expect": "invalid IRI mapping"
    }, {
      "@id": "#t0019",
      "@type": [ "jld:NegativeEvaluationTest", "jld:FlattenTest" ],
      "name": "Invalid keyword alias",
      "purpose": "Verifies that an exception is raised on expansion when a invalid keyword alias is found",
      "input": "error-0019-in.jsonld",
      "expect": "invalid keyword alias"
    }, {
      "@id": "#t0020",
      "@type": [ "jld:NegativeEvaluationTest", "jld:FlattenTest" ],
      "name": "Invalid IRI mapping (no vocab mapping)",
      "purpose": "Verifies that an exception is raised on expansion when a invalid IRI mapping is found",
      "input": "error-0020-in.jsonld",
      "expect": "invalid IRI mapping"
    }, {
      "@id": "#t0021",
      "@type": [ "jld:NegativeEvaluationTest", "jld:FlattenTest" ],
      "name": "Invalid container mapping",
      "purpose": "Verifies that an exception is raised on expansion when a invalid container mapping is found",
      "input": "error-0021-in.jsonld",
      "expect": "invalid container mapping",
      "option": {"processingMode": "json-ld-1.0"}
    }, {
      "@id": "#t0022",
      "@type": [ "jld:NegativeEvaluationTest", "jld:FlattenTest" ],
      "name": "Invalid language mapping",
      "purpose": "Verifies that an exception is raised on expansion when a invalid language mapping is found",
      "input": "error-0022-in.jsonld",
      "expect": "invalid language mapping"
    }, {
      "@id": "#t0023",
      "@type": [ "jld:NegativeEvaluationTest", "jld:FlattenTest" ],
      "name": "Invalid IRI mapping (relative IRI in @type)",
      "purpose": "Verifies that an exception is raised on expansion when a invalid type mapping is found",
      "input": "error-0023-in.jsonld",
      "expect": "invalid type mapping"
    }, {
      "@id": "#t0024",
      "@type": [ "jld:NegativeEvaluationTest", "jld:FlattenTest" ],
      "name": "List of lists (from array)",
      "purpose": "Verifies that an exception is raised in Expansion when a list of lists is found",
      "input": "error-0024-in.jsonld",
      "expect": "list of lists"
    }, {
      "@id": "#t0025",
      "@type": [ "jld:NegativeEvaluationTest", "jld:FlattenTest" ],
      "name": "Invalid reverse property map",
      "purpose": "Verifies that an exception is raised in Expansion when a invalid reverse property map is found",
      "input": "error-0025-in.jsonld",
      "expect": "invalid reverse property map"
    }, {
      "@id": "#t0026",
      "@type": [ "jld:NegativeEvaluationTest", "jld:FlattenTest" ],
      "name": "Colliding keywords",
      "purpose": "Verifies that an exception is raised in Expansion when colliding keywords are found",
      "input": "error-0026-in.jsonld",
      "expect": "colliding keywords"
    }, {
      "@id": "#t0027",
      "@type": [ "jld:NegativeEvaluationTest", "jld:FlattenTest" ],
      "name": "Invalid @id value",
      "purpose": "Verifies that an exception is raised in Expansion when an invalid @id value is found",
      "input": "error-0027-in.jsonld",
      "expect": "invalid @id value"
    }, {
      "@id": "#t0028",
      "@type": [ "jld:NegativeEvaluationTest", "jld:FlattenTest" ],
      "name": "Invalid type value",
      "purpose": "Verifies that an exception is raised in Expansion when an invalid type value is found",
      "input": "error-0028-in.jsonld",
      "expect": "invalid type value"
    }, {
      "@id": "#t0029",
      "@type": [ "jld:NegativeEvaluationTest", "jld:FlattenTest" ],
      "name": "Invalid value object value",
      "purpose": "Verifies that an exception is raised in Expansion when an invalid value object value is found",
      "input": "error-0029-in.jsonld",
      "expect": "invalid value object value"
    }, {
      "@id": "#t0030",
      "@type": [ "jld:NegativeEvaluationTest", "jld:FlattenTest" ],
      "name": "Invalid language-tagged string",
      "purpose": "Verifies that an exception is raised in Expansion when an invalid language-tagged string value is found",
      "input": "error-0030-in.jsonld",
      "expect": "invalid language-tagged string"
    }, {
      "@id": "#t0031",
      "@type": [ "jld:NegativeEvaluationTest", "jld:FlattenTest" ],
      "name": "Invalid @index value",
      "purpose": "Verifies that an exception is raised in Expansion when an invalid @index value value is found",
      "input": "error-0031-in.jsonld",
      "expect": "invalid @index value"
    }, {
      "@id": "#t0032",
      "@type": [ "jld:NegativeEvaluationTest", "jld:FlattenTest" ],
      "name": "List of lists (from array)",
      "purpose": "Verifies that an exception is raised in Expansion when a list of lists is found",
      "input": "error-0032-in.jsonld",
      "expect": "list of lists"
    }, {
      "@id": "#t0033",
      "@type": [ "jld:NegativeEvaluationTest", "jld:FlattenTest" ],
      "name": "Invalid @reverse value",
      "purpose": "Verifies that an exception is raised in Expansion when an invalid @reverse value is found",
      "input": "error-0033-in.jsonld",
      "expect": "invalid @reverse value"
    }, {
      "@id": "#t0034",
      "@type": [ "jld:NegativeEvaluationTest", "jld:FlattenTest" ],
      "name": "Invalid reverse property value (in @reverse)",
      "purpose": "Verifies that an exception is raised in Expansion when an invalid reverse property value is found",
      "input": "error-0034-in.jsonld",
      "expect": "invalid reverse property value"
    }, {
      "@id": "#t0035",
      "@type": [ "jld:NegativeEvaluationTest", "jld:FlattenTest" ],
      "name": "Invalid language map value",
      "purpose": "Verifies that an exception is raised in Expansion when an invalid language map value is found",
      "input": "error-0035-in.jsonld",
      "expect": "invalid language map value"
    }, {
      "@id": "#t0036",
      "@type": [ "jld:NegativeEvaluationTest", "jld:FlattenTest" ],
      "name": "Invalid reverse property value (through coercion)",
      "purpose": "Verifies that an exception is raised in Expansion when an invalid reverse property value is found",
      "input": "error-0036-in.jsonld",
      "expect": "invalid reverse property value"
    }, {
      "@id": "#t0037",
      "@type": [ "jld:NegativeEvaluationTest", "jld:FlattenTest" ],
      "name": "Invalid value object (unexpected keyword)",
      "purpose": "Verifies that an exception is raised in Expansion when an invalid value object is found",
      "input": "error-0037-in.jsonld",
      "expect": "invalid value object"
    }, {
      "@id": "#t0038",
      "@type": [ "jld:NegativeEvaluationTest", "jld:FlattenTest" ],
      "name": "Invalid value object (@type and @language)",
      "purpose": "Verifies that an exception is raised in Expansion when an invalid value object is found",
      "input": "error-0038-in.jsonld",
      "expect": "invalid value object"
    }, {
      "@id": "#t0039",
      "@type": [ "jld:NegativeEvaluationTest", "jld:FlattenTest" ],
      "name": "Invalid language-tagged value",
      "purpose": "Verifies that an exception is raised in Expansion when an invalid language-tagged value is found",
      "input": "error-0039-in.jsonld",
      "expect": "invalid language-tagged value"
    }, {
      "@id": "#t0040",
      "@type": [ "jld:NegativeEvaluationTest", "jld:FlattenTest" ],
      "name": "Invalid typed value",
      "purpose": "Verifies that an exception is raised in Expansion when an invalid typed value is found",
      "input": "error-0040-in.jsonld",
      "expect": "invalid typed value"
    }, {
      "@id": "#t0041",
      "@type": [ "jld:NegativeEvaluationTest", "jld:FlattenTest" ],
      "name": "Invalid set or list object",
      "purpose": "Verifies that an exception is raised in Expansion when an invalid set or list object is found",
      "input": "error-0041-in.jsonld",
      "expect": "invalid set or list object"
    }, {
      "@id": "#t0042",
      "@type": [ "jld:NegativeEvaluationTest", "jld:FlattenTest" ],
      "name": "Compaction to list of lists",
      "purpose": "Verifies that an exception is raised in Compaction when attempting to compact a list of lists",
      "input": "error-0042-in.jsonld",
      "context": "error-0042-context.jsonld",
      "expect": "compaction to list of lists"
    }, {
      "@id": "#t0043",
      "@type": [ "jld:NegativeEvaluationTest", "jld:FlattenTest" ],
      "name": "Conflicting indexes",
      "purpose": "Verifies that an exception is raised in Flattening when conflicting indexes are found",
      "input": "error-0043-in.jsonld",
      "expect": "conflicting indexes"
    }, {
      "@id": "#tc001",
      "@type": [ "jld:NegativeEvaluationTest", "jld:FlattenTest" ],
      "name": "Invalid keyword in term definition",
      "purpose": "Verifies that an exception is raised on expansion when a invalid term definition is found",
      "input": "error-c001-in.jsonld",
      "expect": "invalid term definition",
      "option": {"processingMode": "json-ld-1.1"}
    }, {
      "@id": "#tm021",
      "@type": [ "jld:NegativeEvaluationTest", "jld:FlattenTest" ],
      "name": "Invalid container mapping",
      "purpose": "Verifies that an exception is raised on expansion when a invalid container mapping is found",
      "input": "error-m021-in.jsonld",
      "expect": "invalid container mapping",
      "option": {"processingMode": "json-ld-1.1"}
    }, {
      "@id": "#tn001",
      "@type": [ "jld:NegativeEvaluationTest", "jld:FlattenTest" ],
      "name": "@nest MUST NOT have a string value",
      "purpose": "container: @nest",
      "input": "error-n001-in.jsonld",
      "expect": "invalid @nest value",
      "option": {"processingMode": "json-ld-1.1"}
    }, {
      "@id": "#tn002",
      "@type": [ "jld:NegativeEvaluationTest", "jld:FlattenTest" ],
      "name": "@nest MUST NOT have a boolen value",
      "purpose": "container: @nest",
      "input": "error-n002-in.jsonld",
      "expect": "invalid @nest value",
      "option": {"processingMode": "json-ld-1.1"}
    }, {
      "@id": "#tn003",
      "@type": [ "jld:NegativeEvaluationTest", "jld:FlattenTest" ],
      "name": "@nest MUST NOT have a numeric value",
      "purpose": "container: @nest",
      "input": "error-n003-in.jsonld",
      "expect": "invalid @nest value",
      "option": {"processingMode": "json-ld-1.1"}
    }, {
      "@id": "#tn004",
      "@type": [ "jld:NegativeEvaluationTest", "jld:FlattenTest" ],
      "name": "@nest MUST NOT have a value object value",
      "purpose": "container: @nest",
      "input": "error-n004-in.jsonld",
      "expect": "invalid @nest value",
      "option": {"processingMode": "json-ld-1.1"}
    }
  ]
}
